@model Yms.Web.Models.MainViewModel
@{
    if (ViewData["Title"] == null)
    {
        ViewData["Title"] = "Alışveriş Dünyası";
    }
}

<div class="container">
    <section class="py-5 bg-light">
        <div class="container">
            <div class="row px-4 px-lg-5 py-lg-4 align-items-center">
                <div class="col-lg-12">
                    <h1 class="h2 text-uppercase mb-0">Ürünler / @Model.Title</h1>
                </div>
            </div>
        </div>
    </section>
    <section class="py-5">
        <div class="container p-0">
            <div class="row">
                <div id="leftMenu" class="col-lg-3 order-2 order-lg-1">
                    @{ await Html.RenderPartialAsync("Home/Categories", Model.Categories); }
                    @{ await Html.RenderPartialAsync("Home/Suppliers", Model.Suppliers); }
                    @{ await Html.RenderPartialAsync("Home/QuickFilter"); }
                </div>
                <div class="col-lg-9 order-1 order-lg-2 mb-5 mb-lg-0">
                    @{ await Html.RenderPartialAsync("Home/ProductList", Model.Products); }
                </div>

            </div>
        </div>
    </section>
</div>

@section script {
    <script>
        var imageUrl = '@Url.Action("Get", "Image", new { id = "_id_" })';
        var addToCartUrl = '@Html.Raw(Url.Action("AddToCart", "Order", new { productId = "_id_", count = "1"}))';
    </script>

    <script src="~/js/pages/productlist.js"></script>
    
    <script>
        var range = document.getElementById('range');
        noUiSlider.create(range, {
            range: {
                'min': 0,
                'max': 10000
            },
            step: 5,
            start: [1000, 5000],
            margin: 300,
            connect: true,
            direction: 'ltr',
            orientation: 'horizontal',
            behaviour: 'tap-drag',
            tooltips: true,
            format: {
                to: function (value) {
                    return Math.floor(value) + " ₺";
                },
                from: function (value) {
                    return value.replace('', '');
                }
            }
        });
    </script>
}